#纯个人自用，TG：t.me/oopscn

[General]
geoip-url = https://raw.githubusercontent.com/Loyalsoldier/geoip/release/Country.mmdb
# > 资源解析器
resource-parser = https://raw.githubusercontent.com/Peng-YM/Sub-Store/master/backend/dist/sub-store-parser.loon.min.js
ipv6 = false
# > 跳过某个域名或者IP段
skip-proxy = localhost,*.local,passenger.t3go.cn,e.crashlytics.com,captive.apple.com,app.yinxiang.com,injections.adguard.org,local.adguard.org,cable.auth.com,www.baidu.com,yunbusiness.ccb.com,10.0.0.0/8,100.64.0.0/10,127.0.0.1/32,169.254.0.0/16,172.16.0.0/12,192.168.0.0/16,224.0.0.0/4,240.0.0.0/4,::1/128,fc00::/7,fd00::/8,fe80::/10,ff00::/8,2001::/32,2001:db8::/32,2002::/16,::ffff:0:0:0:0/1,::ffff:128:0:0:0/1
bypass-tun = 10.0.0.0/8,100.64.0.0/10,127.0.0.0/8,169.254.0.0/16,172.16.0.0/12,192.0.0.0/24,192.0.2.0/24,192.88.99.0/24,192.168.0.0/16,198.18.0.0/15,198.51.100.0/24,203.0.113.0/24,224.0.0.0/4,255.255.255.255/32
# DNS 服务器，如果只在中国大陆境内使用，推荐删除 1.0.0.1 和 8.8.8.8 两个 DNS
dns-server = 119.29.29.29,223.5.5.5
doh-server = https://dns.alidns.com/dns-query
doh3-server = https://223.5.5.5/dns-query,https://223.6.6.6/dns-query
# Wi-Fi 访问
# > 允许 Wi-Fi 网络下其它设备访问
allow-udp-proxy = false
allow-wifi-access = false
wifi-access-http-port = 7222
wifi-access-socks5-port = 7221
# > 代理测速 URL
proxy-test-url = http://www.gstatic.com/generate_204
internet-test-url = http://www.qualcomm.cn/generate_204
# > 测速超时 (s)
test-timeout = 5
interface-mode = auto
 #> 当节点连续失败多少次后开始切换节点
switch-node-after-failure-times = 3
# > 解决一些ip请求无法匹配域名类规则的问题。real-ip指定的域名将不返回fake ip响应，直接将dns请求发往目标dns服务器
real-ip = msftconnecttest.com,msftncsi.com,*.msftconnecttest.com,*.msftncsi.com,*.srv.nintendo.net,*.stun.playstation.net,xbox.*.microsoft.com,*.xboxlive.com,*.battlenet.com.cn,*.battlenet.com,*.blzstatic.cn,*.battle.net
# 解析器
resource-parser = https://gitlab.com/sub-store/Sub-Store/-/releases/permalink/latest/downloads/sub-store-parser.loon.min.js
# ssid-trigger参数，用于指定SSID下流量模式切换，（default表示默认，cellular表示蜂窝，目前支持三种值：rule，direct，proxy） 
# ssid-trigger="default":rule,"cellular":rule,"ASUS":direct,"TPLINK":proxy 
# 策略切换时关闭链接
disconnect-on-policy-change = true
# udp端口禁用
disable-stun = true
disable-udp-ports = 443


[Host]
# Redirect Google Search Service
#^https?:\/\/(www.)?(g|google)\.cn https://www.google.com 302

[Proxy]
# 内置 DIRECT、REJECT 策略
# 内置 PROXY 指向本地节点或者订阅节点中的任何一个（有本地节点默认指向第一个本地节点，当没有本地节点但有订阅节点时，指向第一个订阅的第一个节点，本地节点和订阅节点都不存在时指向DIRECT）

#ss
#ss1 = Shadowsocks,example.com,443,aes-128-gcm,"password",fast-open=false,udp=true
#ss2 = Shadowsocks,example2.com,443,chacha20,"password",fast-open=true,udp=true
#ss+simple obfs
#ssObfs1 = Shadowsocks,example.com,80,aes-128-gcm,"password",obfs-name=http,obfs-host=www.micsoft.com,fast-open=true,udp=true
#ssObfs2 = Shadowsocks,example.com,443,aes-128-gcm,"password",obfs-name=tls,obfs-host=www.micsoft.com,fast-open=true,udp=true

#ssr
# 节点名称 = 协议，服务器地址，端口，加密方式，密码，obfs-name，{obfs-params}，protocol-name，{protocols-param}
#ssr1 = ShadowsocksR,example.com,443,aes-256-cfb,"password",orig,{},http_simple,{download.windows.com},fast-open=false,udp=true
#ssr2 = ShadowsocksR,example.com,10076,aes-128-cfb,"password",auth_chain_a,{9555:loon},http_post,{download.windows.com},fast-open=false,udp=true
#ssr3 = ShadowsocksR,example.com,10076,chacha20,"password",auth_aes128_md5,{9555:loon},tls1.2_ticket_auth,{download.windows.com},fast-open=false,udp=true
#ssr4 = ShadowsocksR,example.com,10076,chacha20-ietf,"password",auth_aes128_sha1,{9555:loon},plain,{},fast-open=false,udp=true

#http
#http1 = http,example.com,80
#http2 = http,example.com,80,username,"password"

#https
#https1 = https,example.com,443
#https2 = https,example.com,443,username,"password"
#https3 = https,example.com,443,username,"password",skip-cert-verify:true,tls-name:example.com

#vmess+tcp
# 节点名称 = 协议，服务器地址，端口，加密方式，UUID，传输方式:(tcp/ws),path：websocket握手header中的path，host：websocket握手header中的path，over-tls:是否tls，tls-name：tls名字，skip-cert-verify：是否跳过证书校验（默认否）
#vmess1 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+tcp+tls
#vmess2 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:tcp,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true
#vmess+ws
#vmess3 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:false
#vmess+wss
#vmess4 = vmess,example.com,10086,aes-128-gcm,"52396e06-041a-4cc2-be5c-8525eb457809",transport:ws,path:/,host:v3-dy-y.ixigua.com,over-tls:true,tls-name:example.com,skip-cert-verify:true
#trojan
#trojan1 = trojan,example.com,443,"password",skip-cert-verify:false,tls-name:example.com
#trojan2 = trojan,example.com,443,"password",skip-cert-verify:true,tls-name:example.com

[Remote Proxy]
# 订阅节点
# 别名 = 订阅URL
#Subs = https://example/server-complete.txt
#Subs2 = https://example2/server-complete.txt

[Remote Filter]
# 筛选订阅节点，筛选后的结果可加入到策略组中，目前支持三种筛选方式
# NodeSelect: 使用在UI上选择的节点。
# NameKeyword: 根据提供的关键词对订阅中所有节点的名称进行筛选，使用筛选后的节点。
# NameRegex: 根据提供的正则表达式对订阅中所有节点的名称进行筛选，使用筛选后的节点。
#Netflix = NodeSelect,Subs
#Hulu = NameKeyword,Subs,Subs2,FilterKey = Hulu
#HK = NameRegex,Subs,FilterKey = *HK
台湾 = NameRegex, FilterKey = "(?i)(台|TW|台北|新竹|台中|桃园|台南|高雄|tw|Taiwan)"
香港 = NameRegex, FilterKey = "(?i)(香港|🇭🇰|港|HK|Hong Kong)"
日本 = NameRegex, FilterKey = "(?i)(日本|🇯🇵|JP|东京|川日|大阪|泉日|埼玉|沪日|深日|Japan|名古屋|福冈|仙台|京都|Japan|日)"
韩国 = NameRegex, FilterKey = "(?i)(KR|Korea|KOR|首尔|韩|韓|韩国|🇰🇷)"
美国 = NameRegex, FilterKey = "(?i)(美|🇺🇸|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)"
英国 = NameRegex, FilterKey = "(?i)(英国|🇬🇧|UK|United Kingdom|伦敦)"
德国 = NameRegex, FilterKey = "(?i)(德国|🇩🇪)"
新加坡 = NameRegex, FilterKey = "(?i)(新加坡|🇸🇬|狮城|SG|Singapore)"
法国 = NameRegex, FilterKey = "(?i)(法国|🇫🇷)"

[Proxy Group]
# url-test模式，给提供的url发出http header请求，根据返回结果，选择测速最快的节点，默认间隔600s，测速超时时间5s，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto = url-test,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# fallback模式，和url-test类似，不同的是会根据顺序返回第一个可用的节点，为了避免资源浪费，建议节点数不要过多，只支持单个节点和远端节点，其他会被忽略
#Auto1 = fallback,1,2,3,4,Subs,url = http://bing.com/,interval = 600
# 别名 = ssid，默认 = 策略， 蜂窝 = 策略， ssid名称 = 策略
#SSID = ssid, default = PROXY, cellular = DIRECT, "DivineEngine" = PROXY
#负载均衡，可选三种算法：random：随机选择策略组可用节点，round-robin：轮询策略组可用节点，pcc：在random基础上，针对相同host使用同一节点，此处url用来测试节点可用性，每隔interval进行一次测速，max-timeout参数用于筛选测试时间超过max-timeout的节点为不可用节点
#LoadBalance = load-balance,node1,node2,remoteNodes, url = http://bing.com, interval = 600,algorithm = pcc, max-timeout=3000
# 广告模式
#Advertising = select,REJECT,DIRECT
# 白名单模式 PROXY，黑名单模式 DIRECT
#Final = select,PROXY,DIRECT
Global = url-test,HK 香港,SG 狮城,US 美国,TW 台湾,JP 日本,UK 英国,FR 法国,url = http://cp.cloudflare.com/generate_204,interval = 600,tolerance = 100,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Rocket.png
OpenAi = select,JP 日本,TW 台湾,US 美国,HK 香港,url = http://www.gstatic.com/generate_204,img-url = https://gitlab.com/lodepuly/iconlibrary/-/raw/main/Website_icon/120px/OpenAI.png
Pikpak = select,DIRECT,Global,JP 日本,TW 台湾,url = http://www.qualcomm.cn/generate_204,img-url = https://gitlab.com/lodepuly/iconlibrary/-/raw/main/App_icon/120px/PikPak.png
TikTok = select,JP 日本,TW 台湾,US 美国,url = http://www.qualcomm.cn/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/TikTok.png

# 节点选项
#自定义
Spotify = select,US 美国,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Spotify.png
GitHub = select,Global,TW 台湾,JP 日本,HK 香港,US 美国,url = http://www.gstatic.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/GitHub.png
Twitter = select,Global,TW 台湾,HK 香港,JP 日本,SG 狮城,US 美国,url = http://www.gstatic.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Twitter.png
Google = select,Global,HK 香港,TW 台湾,US 美国,JP 日本,KR 韩国,url = http://www.gstatic.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Google_Search.png
YouTube = select,Global,HK 香港,SG 狮城,KR 韩国,US 美国,TW 台湾,JP 日本,url = http://cp.cloudflare.com/generate_204,img-url = https://gitlab.com/lodepuly/iconlibrary/-/raw/main/App_icon/120px/YouTube.png
Telegram = select,Global,HK 香港,SG 狮城,JP 日本,TW 台湾,url = http://cp.cloudflare.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Telegram.png
巴哈姆特 = select,TW 台湾,url = http://www.gstatic.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Bahamut.png
instagram & Facebook = select,Global,TW 台湾,HK 香港,JP 日本,US 美国,url = http://www.gstatic.com/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Instagram.png
HoYoverse = select,Global,HK 香港,TW 台湾,url = http://www.qualcomm.cn/generate_204,img-url = https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/icon/task/mihoyo.png
Microsoft = select,Global,JP 日本,US 美国,TW 台湾,url = http://www.qualcomm.cn/generate_204,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Microsoft.png
HK 香港 = url-test,香港,url = http://cp.cloudflare.com/generate_204,interval = 600,tolerance = 100,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Hong_Kong.png
TW 台湾 = url-test,台湾,url = http://cp.cloudflare.com/generate_204,interval = 600,tolerance = 100,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Taiwan.png
SG 狮城 = url-test,新加坡,url = http://cp.cloudflare.com/generate_204,interval = 600,tolerance = 100,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Singapore.png
JP 日本 = url-test,日本,url = http://cp.cloudflare.com/generate_204,interval = 600,tolerance = 100,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Japan.png
KR 韩国 = url-test,韩国,url = http://cp.cloudflare.com/generate_204,interval = 600,tolerance = 100,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Korea.png
US 美国 = url-test,美国,url = http://www.qualcomm.cn/generate_204,interval = 600,tolerance = 100,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_States.png
UK 英国 = url-test,英国,url = http://www.qualcomm.cn/generate_204,interval = 600,tolerance = 100,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/United_Kingdom.png
DE 德国 = url-test,德国,url = http://www.qualcomm.cn/generate_204,interval = 600,tolerance = 100,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/Germany.png
FR 法国 = url-test,法国,url = http://www.qualcomm.cn/generate_204,interval = 600,tolerance = 100,img-url = https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/France.png
# 白名单模式 PROXY，黑名单模式 DIRECT
[Proxy Chain]

[Rule]
DOMAIN,access.mypikpak.com,Global
DOMAIN,aa3.s10.fun,DIRECT
#本地规则
# Local RULE
# Type:DOMAIN-SUFFIX,DOMAIN,DOMAIN-KEYWORD,USER-AGENT,URL-REGEX,IP-CIDR
# Strategy:DIRECT,Proxy,REJECT
# Options:force-remote-dns(Default:false),no-resolve
#DOMAIN,google.com,PROXY
IP-CIDR,1.1.1.1/24,DIRECT
IP-CIDR,10.0.0.0/8,DIRECT
IP-CIDR,127.0.0.0/8,DIRECT
IP-CIDR,172.16.0.0/12,DIRECT
IP-CIDR,192.168.0.0/16,DIRECT
IP-CIDR,224.0.0.0/24,DIRECT
# GeoIP China
GEOIP,CN,DIRECT
#日本🇯🇵
GEOIP,JP,Global
#香港🇭🇰
GEOIP,HK,Global
#美国🇺🇸
GEOIP,US,Global
#英国🇬🇧
GEOIP,GB,Global
#新加坡🇸🇬
GEOIP,SG,Global
#越南🇻🇳
GEOIP,VN,Global
#印度🇮🇳
GEOIP,IN,Global
#希腊🇬🇷
GEOIP,GR,Global
#西班牙🇪🇸
GEOIP,ES,Global
#乌克兰🇺🇦
GEOIP,UA,Global
#土耳其🇹🇷
GEOIP,TR,Global
#泰国🇹🇭
GEOIP,TH,Global
#台湾
GEOIP,TW,Global
#瑞士🇨🇭
GEOIP,CH,Global
#瑞典🇸🇪
GEOIP,SE,Global
#葡萄牙🇵🇹
GEOIP,PT,Global
#挪威🇳🇴
GEOIP,NO,Global
#新西兰🇳🇿
GEOIP,NZ,Global
#韩国🇰🇷
GEOIP,KR,Global
#南非🇿🇦
GEOIP,ZA,Global
#墨西哥🇲🇽
GEOIP,MX,Global
#缅甸🇲🇲
GEOIP,MM,Global
#孟加拉国🇧🇩
GEOIP,BD,Global
#蒙古🇲🇳
GEOIP,MN,Global
#马来西亚🇲🇾
GEOIP,MY,Global
#开曼群岛🇰🇾英属
GEOIP,KY,Global
#柬埔寨🇰🇭
GEOIP,KH,Global
#加拿大🇨🇦
GEOIP,CA,Global
#荷兰🇳🇱
GEOIP,NL,Global
#哈萨克🇰🇿
GEOIP,KZ,Global
#海地🇭🇹
GEOIP,HT,Global
#芬兰🇫🇮
GEOIP,FI,Global
#斐济🇫🇯
GEOIP,FJ,Global
#菲律宾🇵🇭
GEOIP,PH,Global
#法国🇫🇷
GEOIP,FR,Global
#俄罗斯🇷🇺
GEOIP,RU,Global
#德国🇩🇪
GEOIP,DE,Global
#丹麦🇩🇰
GEOIP,DK,Global
#波兰🇵🇱
GEOIP,PL,Global
#冰岛🇮🇸
GEOIP,IS,Global
#白俄罗斯🇧🇾
GEOIP,BY,Global
#澳大利亚🇦🇺
GEOIP,AU,Global
#意大利🇮🇹
GEOIP,IT,Global
FINAL,Global

[Remote Rule]
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/WeChat/WeChat.list, policy=DIRECT, tag=WeChat, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Blued/Blued.list, policy=DIRECT, tag=Blued, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Apple/Apple.list, policy=DIRECT, tag=Apple, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Rule/AI.list, policy=OpenAi, tag=Ai, enabled=true
https://github.com/blackmatrix7/ios_rule_script/raw/master/rule/Loon/YouTube/YouTube.list, policy=YouTube, tag=YouTube, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Google/Google.list, policy=Google, tag=Google, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/PikPak/PikPak.list, policy=Pikpak, tag=PikPak, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Spotify/Spotify.list, policy=Spotify, tag=Spotify, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Telegram/Telegram.list, policy=Telegram, tag=Telegram, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/TikTok/TikTok.list, policy=TikTok, tag=TikTok, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Twitter/Twitter.list, policy=Twitter, tag=Twitter, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Facebook/Facebook.list, policy=instagram & Facebook, tag=Facebook & instagram, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/HoYoverse/HoYoverse.list, policy=HoYoverse, tag=HoYoverse, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/GitHub/GitHub.list, policy=GitHub, tag=GitHub, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Microsoft/Microsoft.list, policy=Microsoft, tag=Microsoft, enabled=true
https://raw.githubusercontent.com/blackmatrix7/ios_rule_script/master/rule/Loon/Bahamut/Bahamut.list, policy=巴哈姆特, tag=巴哈姆特, enabled=true
# Remote Rule
# 订阅规则URL,策略
# 直连和广告拦截
# PROXY
#https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rule/ExampleRule.list,policy=PROXY,enabled=false


[Remote Rewrite]
# 订阅 URL Rewrite
# 订阅url,别名(可选)
https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list, tag=auto(Loon自带), enabled=false

[Script]
enable = true
# http-request 处理请求的脚本
# http-response 处理请求响应的脚本
# cron 定时脚本
# network-changed   网络发生变化触发脚本

# http-request ^https?:\/\/(www.)?(example)\.com script-path=localscript.js,tag = requestScript,enable=true
# http-response ^https?:\/\/(www.)?(example)\.com script-path=https://example.com/loon.js,timeout=10,requires-body = true,tag = responseScript,enable=true
# cron "0 8 * * *" script-path=cron.js,tag = responseScript,enable=true

network-changed script-path=https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Script/netChanged.js, timeout=300, tag=changeModel(Loon自带)

[Remote Script]
# https://example.com/loon.js, tag=scripts, enable=true

[Plugin]
http://script.hub/file/_start_/https://raw.githubusercontent.com/Alex0510/Eric/master/surge/Module/blued.sgmodule/_end_/blued.plugin?type=surge-module&target=loon-plugin&del=true, enabled=false
https://raw.githubusercontent.com/Script-Hub-Org/Script-Hub/main/modules/script-hub.loon.plugin, policy=Global, enabled=true
https://raw.githubusercontent.com/chavyleung/scripts/master/box/rewrite/boxjs.rewrite.loon.plugin, policy=Global, enabled=true
http://script.hub/file/_start_/https://raw.githubusercontent.com/Yu9191/Rewrite/main/Revenuecat.js/_end_/Revenuecat.plugin?type=qx-rewrite&target=loon-plugin&del=true, tag=练就, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/BlockAdvertisers.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Kuwo_remove_ads.plugin, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/KuGou_remove_ads.plugin, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/QuarkBrowser_remove_ads.plugin, enabled=false
https://github.com/Moli-X/Resources/raw/main/Loon/XHS.plugin, enabled=false
https://github.com/Moli-X/Resources/raw/main/Loon/AdBlock.plugin, enabled=true
https://raw.githubusercontent.com/Moli-X/Resources/main/Loon/JianYing.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/iMaiCai_remove_ads.plugin, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/ZuiYou_remove_ads.plugin, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/ZhuanZhuan_remove_ads.plugin, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/DiDi_remove_ads.plugin, enabled=false
http://script.hub/file/_start_/https://raw.githubusercontent.com/Yuheng0101/X/main/Scripts/tidal.js/_end_/tidal.plugin?type=qx-rewrite&target=loon-plugin&del=true, tag=tidal, enabled=false
https://raw.githubusercontent.com/DualSubs/Spotify/main/modules/DualSubs.Spotify.plugin, enabled=false
https://raw.githubusercontent.com/VirgilClyne/GetSomeFries/main/plugin/General.plugin, enabled=false
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/soundcloud.plugin, enabled=false
https://whatshub.top/plugin/SpotifyPremium.plugin, enabled=false
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/musixmatch.plugin, enabled=false
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/tutu.plugin, enabled=false
https://raw.githubusercontent.com/NobyDa/Script/master/Loon/Loon_Google_CAPTCHA.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Remove_ads_by_keli.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/YouTube_remove_ads.plugin, enabled=true
https://napi.ltd/script/Worker/KuWo.js, enabled=false
https://napi.ltd/script/Worker/NapiSSR.js, enabled=false
https://raw.githubusercontent.com/chxm1023/Script_X/main/Collections.plugin, enabled=false
https://whatshub.top/plugin/meituxx.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/TubeMax_remove_ads.plugin, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Weixin_Official_Accounts_remove_ads.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/NeteaseCloudMusic_remove_ads.plugin, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Spotify_remove_ads.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Switch_github_mirror.plugin, enabled=false
http://script.hub/file/_start_/https://raw.githubusercontent.com/boys002/QuantumultX-configuration-file-MengRain/patch-1/Apollo.conf/_end_/Apollo.plugin?type=qx-rewrite&target=loon-plugin&del=true, tag=Apollo, enabled=false
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/LoonGallery.plugin, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/Sub-Store.plugin, policy=Global, enabled=true
https://gitlab.com/lodepuly/vpn_tool/-/raw/master/Tool/Loon/Plugin/WexinMiniPrograms_Remove_ads.plugin, tag=微信小程序去广告, enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/Loon/Loon_TF_Download.plugin, enabled=true
https://raw.githubusercontent.com/NobyDa/Script/master/Loon/Loon_TF_Account.plugin, enabled=true
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/doc.plugin, enabled=false
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/WPS.plugin, enabled=false
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/keep.plugin, enabled=true
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/adguard.plugin, enabled=false
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/MediaChecker.plugin, enabled=true
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/clarity.plugin, enabled=true
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/KuwoVip.plugin, enabled=false
https://raw.githubusercontent.com/deezertidal/private/master/plugallery/baimiao.plugin, enabled=true
https://raw.githubusercontent.com/app2smile/rules/master/plugin/youtube.plugin, img-url=https://raw.githubusercontent.com/Koolson/Qure/master/IconSet/Color/YouTube_Letter.png, enabled=true
# plugin-url tag=tag,proxy=插件中PROXY所指向的策略,enable=true
# plugin策略可设置为DIRECT,REJECT,PROXY，其中PROXY为用户在app中手动映射的策略，rule后不跟随策略默认使用PROXY
# example: https://raw.githubusercontent.com/Loon0x00/LoonExampleConfig/master/Rewrite/AutoRewrite_Example.list,tag=boxjs,enable=true

[MITM]
hostname =
